{
  "name": "dev-plugin",
  "scripts": {
    "db:generate": "bun prisma generate",
    "db:migrate:local": "bun prisma migrate dev",
    "db:push": "bun prisma db push",
    "db:studio": "bun prisma studio",
    "lint": "bunx biome lint --write",
    "lint:check": "bunx biome lint",
    "check": "bunx biome check --write",
    "check:ci": "bunx biome check",
    "format": "bunx biome format --write",
    "format:check": "bunx biome format",
    "typecheck": "bun tsc --noEmit",
    "dev": "bun run --watch --watch-config src/config/fast-watch.ts src/index.ts",
    "dev:debug": "bun run --inspect --watch --watch-config src/config/fast-watch.ts src/index.ts",
    "dev:hot": "bun run --watch --hot --watch-config src/config/fast-watch.ts src/index.ts",
    "build": "bun run build:prod",
    "build:dev": "bun run db:generate && bun run check && bun run scripts/build-optimized.ts development",
    "build:staging": "bun run db:generate && bun run check && bun run lint && bun run scripts/build-optimized.ts staging",
    "build:prod": "bun run db:generate && bun run check && bun run lint && bun run format && bun run scripts/build-optimized.ts production",
    "build:analyze": "bun run build:prod && bun --print \"Build size analysis for production\"",
    "start": "bun run build/prod/index.js",
    "start:dev": "NODE_ENV=development bun run build/dev/index.js",
    "start:staging": "NODE_ENV=staging bun run build/staging/index.js",
    "test": "bun run scripts/test-setup.ts && bun test",
    "test:watch": "bun test --watch",
    "test:coverage": "bun test --coverage",
    "test:security": "bun test tests/security/",
    "security-check": "bun run scripts/security-check.ts",
    "security-audit": "npm audit --audit-level moderate",
    "perf:startup": "bun run scripts/performance-monitor.ts startup",
    "perf:build": "bun run scripts/performance-monitor.ts build",
    "perf:bundle": "bun run scripts/performance-monitor.ts bundle",
    "perf:memory": "bun run scripts/performance-monitor.ts memory",
    "perf:hotreload": "bun run scripts/performance-monitor.ts hotreload",
    "perf:full": "bun run scripts/performance-monitor.ts",
    "perf:health-check": "bun run scripts/performance-health-check.ts",
    "clean": "rm -rf build dist node_modules/.cache",
    "pre-commit": "bun run typecheck && bun run lint:check && bun run format:check && bun run security-check && bun test tests/smoke.test.ts",
    "quality-check": "bun run scripts/quality-check.ts",
    "quality-check:verbose": "bun run scripts/quality-check.ts --verbose",
    "deploy:staging": "bash scripts/deploy.sh staging",
    "deploy:production": "bash scripts/deploy.sh production",
    "deploy:staging:bg": "bash scripts/deploy.sh staging blue-green",
    "deploy:production:bg": "bash scripts/deploy.sh production blue-green",
    "deploy:staging:canary": "bash scripts/deploy.sh staging canary",
    "deploy:production:canary": "bash scripts/deploy.sh production canary",
    "docker:build": "bash scripts/docker-build.sh",
    "docker:build:dev": "bash scripts/docker-build.sh development",
    "docker:build:staging": "bash scripts/docker-build.sh staging",
    "docker:build:prod": "bash scripts/docker-build.sh production",
    "docker:build:all": "bash scripts/docker-build.sh all",
    "docker:up": "docker-compose --profile development up -d",
    "docker:up:dev": "docker-compose --profile development up -d",
    "docker:up:staging": "docker-compose --profile staging up -d",
    "docker:up:prod": "docker-compose --profile production up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:logs:app": "docker-compose logs -f app-dev",
    "docker:clean": "docker-compose down -v --remove-orphans && docker system prune -f",
    "db:migrate": "bash scripts/migrate.sh production migrate",
    "db:migrate:staging": "bash scripts/migrate.sh staging migrate",
    "db:migrate:dev": "bash scripts/migrate.sh development migrate",
    "db:rollback": "bash scripts/migrate.sh production rollback --force",
    "db:rollback:staging": "bash scripts/migrate.sh staging rollback --force",
    "db:rollback:dev": "bash scripts/migrate.sh development rollback --force",
    "db:status": "bash scripts/migrate.sh production status",
    "db:status:staging": "bash scripts/migrate.sh staging status",
    "db:status:dev": "bash scripts/migrate.sh development status",
    "db:backup": "bash scripts/migrate.sh production backup",
    "db:backup:staging": "bash scripts/migrate.sh staging backup",
    "db:backup:dev": "bash scripts/migrate.sh development backup",
    "k8s:deploy": "kubectl apply -f k8s/",
    "k8s:deploy:staging": "kubectl apply -f k8s/ -n dev-plugin-staging",
    "k8s:delete": "kubectl delete -f k8s/",
    "k8s:delete:staging": "kubectl delete -f k8s/ -n dev-plugin-staging"
  },
  "dependencies": {
    "@elysiajs/cors": "^1.4.0",
    "@elysiajs/jwt": "^1.1.1",
    "@elysiajs/server-timing": "^1.1.0",
    "@elysiajs/swagger": "^1.1.6",
    "@prisma/client": "^6.0.1",
    "@types/ws": "^8.18.1",
    "ajv": "^8.17.1",
    "ajv-formats": "^3.0.1",
    "cryptr": "^6.3.0",
    "dayjs": "^1.11.13",
    "dotenv": "^17.2.3",
    "elysia": "latest",
    "redis": "^5.8.3",
    "ws": "^8.18.3"
  },
  "devDependencies": {
    "@biomejs/biome": "1.9.4",
    "bun-types": "^1.3.1",
    "prisma": "^6.0.1"
  }
}
